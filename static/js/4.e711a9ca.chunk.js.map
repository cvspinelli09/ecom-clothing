{"version":3,"sources":["components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreviewContainer","styled","div","TitleContainer","h1","PreviewContainer","CollectionPreview","title","items","toUpperCase","filter","item","index","map","key","id","CollectionsOverviewContainer","MapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherCollectionProps","mapStateToProps","isLoading","selectIsCollectionFetching","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"g3BAEO,IAAMA,EAA6BC,IAAOC,IAAV,KAU1BC,EAAiBF,IAAOG,GAAV,KASdC,EAAmBJ,IAAOC,IAAV,KCEdI,EAbW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACtB,kBAACR,EAAD,KACI,kBAACG,EAAD,KAAiBI,EAAME,eACvB,kBAACJ,EAAD,KACKG,EACIE,QAAO,SAACC,EAAMC,GAAP,OAAiBA,EAAQ,KAChCC,KAAI,SAAAF,GAAI,OACL,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,U,wHCfjD,IAAMK,EAA+Bf,IAAOC,IAAV,KCgBnCe,EAAkBC,YAAyB,CAC7CC,YAAaC,MAGFC,cAAQJ,EAARI,EAZa,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OACxB,kBAACH,EAAD,KACKG,EAAYN,KAAI,gBAAGE,EAAH,EAAGA,GAAOO,EAAV,6BACb,kBAAC,EAAD,eAAmBR,IAAKC,GAAQO,WCLtCC,EAAkBL,YAAyB,CAC7CM,UAAWC,MAGTT,EAA+BU,YACjCL,YAAQE,GACRI,IAFiCD,CAGnCE,GAEaZ,a,gCCjBf,oJAEMa,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKZ,eAGJC,EAA8Ba,YACvC,CAACD,IACD,SAAAb,GAAW,OACPA,EAAce,OAAOC,KAAKhB,GAAaN,KAAI,SAAAC,GAAG,OAAIK,EAAYL,MAAQ,MAGjEsB,EAAmB,SAAAC,GAAkB,OAC9CJ,YACI,CAACD,IACD,SAAAb,GAAW,OAAKA,EAAcA,EAAYkB,GAAsB,SAG3DZ,EAA6BQ,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKO,cAGJC,EAA4BN,YACrC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKZ,gB,oECpBJQ,IAJK,SAAAa,GAAgB,OAAI,YAAmC,IAAhChB,EAA+B,EAA/BA,UAAciB,EAAiB,6BACtE,OAAOjB,EAAY,kBAAC,IAAD,MAAc,kBAACgB,EAAqBC,M,wmDCFpD,IAAMC,EAA0BzC,IAAOC,IAAV,KAgCvByC,EAAY1C,YAAO2C,IAAP3C,CAAH,KAeT4C,EAAkB5C,IAAOC,IAAV,KAMJ,gBAAG4C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGXC,EAA4B9C,IAAOC,IAAV,KAQzB8C,EAAgB/C,IAAOgD,KAAV,KAKbC,EAAiBjD,IAAOgD,KAAV,KCrCZ5B,gBACX,MALuB,SAAA8B,GAAQ,MAAK,CACpCC,QAAS,SAAAzC,GAAI,OAAIwC,EAASC,YAAQzC,QAGvBU,EArBQ,SAAC,GAAuB,IAArBV,EAAoB,EAApBA,KAAMyC,EAAc,EAAdA,QACpBC,EAA0B1C,EAA1B0C,KAAMC,EAAoB3C,EAApB2C,MAAOR,EAAanC,EAAbmC,SAErB,OACI,kBAACJ,EAAD,KACI,kBAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IAC7C,kBAACC,EAAD,KACI,kBAACC,EAAD,KAAiBK,GACjB,kBAACH,EAAD,KAAiBI,IAErB,kBAACX,EAAD,CAAWa,QAAS,kBAAMJ,EAAQzC,IAAO8C,UAAQ,GAAjD","file":"static/js/4.e711a9ca.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CollectionPreviewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 30px;\n\n    @media screen and (max-width: 800px) {\n        align-items: center;\n    }\n`;\n\nexport const TitleContainer = styled.h1`\n    font-size: 28px;\n    margin-bottom: 25px;\n\n    &:hover {\n        color: grey;\n    }\n`;\n\nexport const PreviewContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    @media screen and (max-width: 800px) {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-gap: 15px;\n    }\n`;\n\n\n","import React  from 'react';\n\nimport CollectionItem from '../collection-item/collection-item.component';\n\nimport {\n    CollectionPreviewContainer,\n    TitleContainer,\n    PreviewContainer\n} from './collection-preview.styles';\n\nconst CollectionPreview = ({ title, items }) => (\n    <CollectionPreviewContainer>\n        <TitleContainer>{title.toUpperCase()}</TitleContainer>\n        <PreviewContainer >\n            {items\n                .filter((item, index) => index < 4)\n                .map(item => (\n                    <CollectionItem key={item.id} item={item}  />\n                ))}\n        </PreviewContainer>\n    </CollectionPreviewContainer>\n);\n\nexport default CollectionPreview;","import styled from 'styled-components';\n\nexport const CollectionsOverviewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionPreview from '../collection-preview/collection-preview.component';\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\n\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\n\n\nconst CollectionsOverview = ({ collections }) => (\n    <CollectionsOverviewContainer>\n        {collections.map(({ id, ...otherCollectionProps }) => (\n            <CollectionPreview key={id} {...otherCollectionProps} />\n        ))}\n    </CollectionsOverviewContainer>\n);\n\nconst MapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview\n});\n\nexport default connect(MapStateToProps)(CollectionsOverview);","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\n\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from './collections-overview.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsCollectionFetching\n});\n\nconst CollectionsOverviewContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => \n        collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n    createSelector(\n        [selectCollections],\n        collections => (collections ? collections[collectionUrlParam] : null)\n    );\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {    \n    return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />   \n};\n\nexport default WithSpinner;","import styled from 'styled-components';\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nexport const CollectionItemContainer = styled.div`\n    width: 22vw;\n    display: flex;\n    flex-direction: column;\n    height: 350px;\n    align-items: center;\n    position: relative;\n\n    &:hover {\n        .image {\n            opacity: 0.8;\n        }\n        button {\n            opacity: 0.85;\n            display: flex;\n        }\n    }\n\n    @media screen and (max-width: 800px) {\n        width: 40vw;\n\n        &:hover {\n        .image {\n            opacity: unset;\n        }\n        button {\n            opacity: unset;\n        }\n    }\n    }\n`;\n\nexport const AddButton = styled(CustomButton)`\n    width: 80%;\n    opacity: 0.7;\n    position: absolute;\n    top: 255px;\n    display: none;\n\n    @media screen and (max-width: 800px) {\n        display: block;\n        opacity: 0.9;\n        min-width: unset;\n        padding: 0 10px;\n    }\n`; \n\nexport const BackgroundImage = styled.div`\n    width: 100%;\n    height: 95%;\n    background-size: cover;\n    background-position: center;\n    margin-bottom: 5px;\n    background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n    width: 100%;\n    height: 5%;\n    display: flex;\n    justify-content: space-between;\n    font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n    width: 90%;\n    margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n    width: 10%;\n    text-align: right;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {  addItem } from '../../redux/cart/cart.actions';\n\nimport {\n    CollectionItemContainer,\n    CollectionFooterContainer,\n    AddButton,\n    BackgroundImage,\n    NameContainer,\n    PriceContainer\n} from './collection-item.styles';\n\nconst CollectionItem = ({ item, addItem }) => {\n    const { name, price, imageUrl } = item;\n    \n    return (\n        <CollectionItemContainer>\n            <BackgroundImage className='image' imageUrl={imageUrl} />\n            <CollectionFooterContainer>\n                <NameContainer>{ name }</NameContainer>\n                <PriceContainer>{price}</PriceContainer>\n            </CollectionFooterContainer>    \n            <AddButton onClick={() => addItem(item)} inverted > \n                Add to cart \n            </AddButton>\n        </CollectionItemContainer>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(CollectionItem);\n"],"sourceRoot":""}