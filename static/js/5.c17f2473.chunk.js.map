{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageContainer","styled","div","CollectionTitle","h2","CollectionItemsContainer","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","map","item","key","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","collectionUrlParam","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"wwBAEO,IAAMA,EAA0BC,IAAOC,IAAV,KAKvBC,EAAkBF,IAAOG,GAAV,KAKfC,EAA2BJ,IAAOC,IAAV,KCkBtBI,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC1CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGtDD,EAjBQ,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WACdK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MACf,OACA,kBAACf,EAAD,KACI,kBAACG,EAAD,KAAoBW,EAApB,KACA,kBAACT,EAAD,KACKU,EAAMC,KAAI,SAAAC,GAAI,OACX,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,GAAIF,KAAMA,YCZ9CG,EAAkBC,YAAyB,CAC7CC,UAAW,SAACf,GAAD,OAAYgB,YAA0BhB,MAG/CP,EAA0BwB,YAC5BlB,YAAQc,GACRK,IAF4BD,CAG9BE,GAEa1B,a,gCCjBf,oJAEM2B,EAAa,SAAApB,GAAK,OAAIA,EAAMqB,MAErBC,EAAoBC,YAC7B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGJC,EAA8BF,YACvC,CAACD,IACD,SAAAE,GAAW,OACPA,EAAcE,OAAOC,KAAKH,GAAaf,KAAI,SAAAE,GAAG,OAAIa,EAAYb,MAAQ,MAGjER,EAAmB,SAAAyB,GAAkB,OAC9CL,YACI,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYI,GAAsB,SAG3DC,EAA6BN,YACtC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKS,cAGJd,EAA4BO,YACrC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,gB,oECpBJN,IAJK,SAAAa,GAAgB,OAAI,YAAmC,IAAhChB,EAA+B,EAA/BA,UAAciB,EAAiB,6BACtE,OAAOjB,EAAY,kBAAC,IAAD,MAAc,kBAACgB,EAAqBC,M,wmDCFpD,IAAMC,EAA0BvC,IAAOC,IAAV,KAgCvBuC,EAAYxC,YAAOyC,IAAPzC,CAAH,KAeT0C,EAAkB1C,IAAOC,IAAV,KAMJ,gBAAG0C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGXC,EAA4B5C,IAAOC,IAAV,KAQzB4C,EAAgB7C,IAAO8C,KAAV,KAKbC,EAAiB/C,IAAO8C,KAAV,KCrCZzC,gBACX,MALuB,SAAA2C,GAAQ,MAAK,CACpCC,QAAS,SAAAjC,GAAI,OAAIgC,EAASC,YAAQjC,QAGvBX,EArBQ,SAAC,GAAuB,IAArBW,EAAoB,EAApBA,KAAMiC,EAAc,EAAdA,QACpBC,EAA0BlC,EAA1BkC,KAAMC,EAAoBnC,EAApBmC,MAAOR,EAAa3B,EAAb2B,SAErB,OACI,kBAACJ,EAAD,KACI,kBAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IAC7C,kBAACC,EAAD,KACI,kBAACC,EAAD,KAAiBK,GACjB,kBAACH,EAAD,KAAiBI,IAErB,kBAACX,EAAD,CAAWa,QAAS,kBAAMJ,EAAQjC,IAAOsC,UAAQ,GAAjD","file":"static/js/5.c17f2473.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n    font-size: 38px;\n    margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-gap: 10px;\n\n    & > div {\n        margin-bottom: 30px;\n    }\n\n    @media screen and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-gap: 15px;\n    }\n`;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component.jsx';\n\nimport { selectCollection } from '../../redux/shop/shop.selectors';\n\nimport {\n    CollectionPageContainer,\n    CollectionTitle,\n    CollectionItemsContainer\n} from './collection.styles';\n\nconst CollectionPage = ({ collection }) => {\n    const { title, items } = collection;\n    return (\n    <CollectionPageContainer>\n        <CollectionTitle >{ title } </CollectionTitle>\n        <CollectionItemsContainer >\n            {items.map(item => (\n                <CollectionItem key={item.id} item={item} />\n            ))}\n        </CollectionItemsContainer>\n    </CollectionPageContainer>\n)};\n\nconst mapStateToProps = (state, ownProps) => ({\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\n})\n\nexport default connect(mapStateToProps)(CollectionPage);\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from './collection.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: (state) => !selectIsCollectionsLoaded(state)\n});\n\nconst CollectionPageContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n)(CollectionPage);\n\nexport default CollectionPageContainer;\n\n","import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => \n        collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n    createSelector(\n        [selectCollections],\n        collections => (collections ? collections[collectionUrlParam] : null)\n    );\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {    \n    return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />   \n};\n\nexport default WithSpinner;","import styled from 'styled-components';\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nexport const CollectionItemContainer = styled.div`\n    width: 22vw;\n    display: flex;\n    flex-direction: column;\n    height: 350px;\n    align-items: center;\n    position: relative;\n\n    &:hover {\n        .image {\n            opacity: 0.8;\n        }\n        button {\n            opacity: 0.85;\n            display: flex;\n        }\n    }\n\n    @media screen and (max-width: 800px) {\n        width: 40vw;\n\n        &:hover {\n        .image {\n            opacity: unset;\n        }\n        button {\n            opacity: unset;\n        }\n    }\n    }\n`;\n\nexport const AddButton = styled(CustomButton)`\n    width: 80%;\n    opacity: 0.7;\n    position: absolute;\n    top: 255px;\n    display: none;\n\n    @media screen and (max-width: 800px) {\n        display: block;\n        opacity: 0.9;\n        min-width: unset;\n        padding: 0 10px;\n    }\n`; \n\nexport const BackgroundImage = styled.div`\n    width: 100%;\n    height: 95%;\n    background-size: cover;\n    background-position: center;\n    margin-bottom: 5px;\n    background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n    width: 100%;\n    height: 5%;\n    display: flex;\n    justify-content: space-between;\n    font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n    width: 90%;\n    margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n    width: 10%;\n    text-align: right;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {  addItem } from '../../redux/cart/cart.actions';\n\nimport {\n    CollectionItemContainer,\n    CollectionFooterContainer,\n    AddButton,\n    BackgroundImage,\n    NameContainer,\n    PriceContainer\n} from './collection-item.styles';\n\nconst CollectionItem = ({ item, addItem }) => {\n    const { name, price, imageUrl } = item;\n    \n    return (\n        <CollectionItemContainer>\n            <BackgroundImage className='image' imageUrl={imageUrl} />\n            <CollectionFooterContainer>\n                <NameContainer>{ name }</NameContainer>\n                <PriceContainer>{price}</PriceContainer>\n            </CollectionFooterContainer>    \n            <AddButton onClick={() => addItem(item)} inverted > \n                Add to cart \n            </AddButton>\n        </CollectionItemContainer>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(CollectionItem);\n"],"sourceRoot":""}